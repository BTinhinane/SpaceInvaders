/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/game_screen/gameViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

gameViewBase::gameViewBase() :
    buttonCallback(this, &gameViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 800);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_GAME_ID));

    sniperImage.setXY(208, 683);
    sniperImage.setBitmap(touchgfx::Bitmap(BITMAP_SNIPER_ID));

    shootButtonContainer.setPosition(0, 740, 480, 60);
    shootButtonContainer.enableVerticalScroll(false);
    shootButtonContainer.setScrollbarsColor(touchgfx::Color::getColorFrom24BitRGB(255, 0, 0));

    box2.setPosition(-210, 0, 900, 60);
    box2.setColor(touchgfx::Color::getColorFrom24BitRGB(247, 0, 0));
    box2.setAlpha(0);
    shootButtonContainer.add(box2);

    shootButton.setXY(210, 0);
    shootButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID));
    shootButton.setAction(buttonCallback);
    shootButtonContainer.add(shootButton);
    shootButtonContainer.setScrollbarsPermanentlyVisible();

    actualScore.setPosition(333, 4, 126, 41);
    actualScore.setColor(touchgfx::Color::getColorFrom24BitRGB(241, 200, 0));
    actualScore.setLinespacing(0);
    Unicode::snprintf(actualScoreBuffer, ACTUALSCORE_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID9).getText());
    actualScore.setWildcard(actualScoreBuffer);
    actualScore.setTypedText(touchgfx::TypedText(T_SINGLEUSEID2));

    add(__background);
    add(image1);
    add(sniperImage);
    add(shootButtonContainer);
    add(actualScore);
}

void gameViewBase::setupScreen()
{

}

void gameViewBase::action1()
{

}

void gameViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &shootButton)
    {
        //shootButtonIsClicked
        //When shootButton clicked call virtual function
        //Call shootButtonIsClicked
        shootButtonIsClicked();
    }
}
