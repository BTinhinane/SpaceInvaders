/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef GAMEVIEWBASE_HPP
#define GAMEVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/game_screen/gamePresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/ScrollableContainer.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class gameViewBase : public touchgfx::View<gamePresenter>
{
public:
    gameViewBase();
    virtual ~gameViewBase() {}
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void action1();

    /*
     * Virtual Action Handlers
     */
    virtual void shootButtonIsClicked()
    {
        // Override and implement this function in game
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::Image sniperImage;
    touchgfx::ScrollableContainer shootButtonContainer;
    touchgfx::Box box2;
    touchgfx::Button shootButton;
    touchgfx::TextAreaWithOneWildcard actualScore;

    /*
     * Wildcard Buffers
     */
    static const uint16_t ACTUALSCORE_SIZE = 6;
    touchgfx::Unicode::UnicodeChar actualScoreBuffer[ACTUALSCORE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<gameViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // GAMEVIEWBASE_HPP
